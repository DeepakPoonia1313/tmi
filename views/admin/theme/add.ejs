<%- include('../layout/header') %>
    <%- include('../layout/sidebar') %>

        <div class="container mt-4">
            <!-- Enhanced Breadcrumb -->
            <nav aria-label="breadcrumb" class="mb-4">
                <ol class="breadcrumb p-2 bg-light rounded-3" style="--bs-breadcrumb-divider: 'â€º';">
                    <% breadcrumbs.forEach((crumb, index)=> { %>
                        <% if (crumb.url && index !==breadcrumbs.length - 1) { %>
                            <li class="breadcrumb-item">
                                <a href="<%= crumb.url %>" class="text-decoration-none text-primary">
                                    <% if (index===0) { %>

                                        <% } %>
                                            <%= crumb.label %>
                                </a>
                            </li>
                            <% } else { %>
                                <li class="breadcrumb-item active" aria-current="page">

                                    <%= crumb.label %>
                                </li>
                                <% } %>
                                    <% }) %>
                </ol>
            </nav>

            <!-- Card -->
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-white border-bottom py-3">
                    <div class="d-flex align-items-center">

                        <h5 class="mb-0 fw-semibold">Add New Theme</h5>
                    </div>
                </div>

                <div class="card-body p-4">
                    <form id="themeForm" action="/admin/theme/add?module=theme&moduleId=theme" method="POST"
                        enctype="multipart/form-data">
                        <div class="row g-4">
                            <!-- Left Column -->
                            <div class="col-lg-6">
                                <!-- Name -->
                                <div class="mb-3">
                                    <label class="form-label fw-medium">Theme Name <span
                                            class="text-danger">*</span></label>
                                    <div class="input-group">

                                        <input name="name" id="name" class="form-control" maxlength="255" required
                                            placeholder="Enter theme name" />
                                    </div>
                                </div>

                                <!-- Slug -->
                                <div class="mb-3">
                                    <label class="form-label fw-medium">Slug <span class="text-danger">*</span></label>
                                    <input type="text" class="form-control" id="slug" name="slug" required
                                        maxlength="100" placeholder="Enter Slug ">
                                </div>


                                <!-- Description -->
                                <div class="mb-3">
                                    <label class="form-label fw-medium">Description</label>
                                    <textarea name="description" class="form-control" rows="3"
                                        placeholder="Short description of the theme"></textarea>
                                </div>
                            </div>

                            <!-- Right Column -->
                            <div class="col-lg-6">
                                <!-- Image Upload -->
                                <div class="mb-3">
                                    <label class="form-label fw-medium">Theme Image</label>
                                    <div class="border rounded p-3 text-center bg-light">
                                        <div id="image-preview-container" class="mb-2" style="min-height: 120px;">
                                            <img id="image-preview" src="#" alt="Preview"
                                                class="img-fluid rounded d-none" style="max-height: 120px;">
                                            <div id="image-placeholder"
                                                class="d-flex flex-column align-items-center justify-content-center h-100 text-muted">

                                                <span>Image preview</span>
                                            </div>
                                        </div>
                                        <input type="file" class="form-control" name="image" accept="image/*"
                                            onchange="previewImage(event)">
                                        <small class="text-muted">Recommended: 800x600px, JPG or PNG</small>
                                    </div>
                                </div>
                            </div>
                        </div>

                        
                        <div class="editor-container mb-3">
                            <div class="row">
                                <div class="col-12">
                                    <div class="mb-3">
                                        <label class="form-label fw-bold">Content</label>
                                        <textarea id="editor" name="content" class="form-control"
                                            style="min-height: 300px;"></textarea>
                                    </div>
                                </div>
                            </div>

                            <div class="row mt-3">
                                <div class="col-12">
                                    <div class="gallery-section">
                                        <div class="d-flex justify-content-between align-items-center mb-3">
                                            <h5 class="mb-0">Gallery</h5>
                                            <button type="button" class="btn btn-primary btn-sm"
                                                id="gallery-image-button">
                                                Add
                                            </button>
                                        </div>

                                        <div style="max-height: 350px; overflow-y: auto; overflow-x: hidden;">
                                            <% if (images && images.length> 0) { %>
                                                <div class="row g-3">
                                                    <% images.reverse().forEach((image, index)=> { %>
                                                        <div class="col-12 col-sm-6 col-md-4 col-lg-3">
                                                            <div class="card h-100 mt-4 shadow-sm">
                                                                <div class="card-img-top d-flex justify-content-center align-items-center p-2"
                                                                    style="height: 150px;">
                                                                    <img src="<%= image %>" alt="Uploaded Image"
                                                                        class="img-fluid rounded cursor-pointer"
                                                                        style="max-height: 100%; width: auto;"
                                                                        onclick="insertToEditor('<%= image %>')" />
                                                                </div>
                                                                <div class="card-body p-2">
                                                                    <div
                                                                        class="d-flex justify-content-between align-items-center">
                                                                        <small class="text-muted text-truncate me-2"
                                                                            style="max-width: 70%;">
                                                                            Image <%= index + 1 %>
                                                                        </small>
                                                                        <button
                                                                            class="btn btn-sm btn-outline-secondary copy-url-btn"
                                                                            data-url="<%= image %>" title="Copy URL">
                                                                            <i class="bi bi-clipboard"></i>
                                                                        </button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <% }) %>
                                                </div>
                                                <% } else { %>
                                                    <div class="text-center py-3">
                                                        <p class="text-muted">No previously uploaded images.</p>
                                                    </div>
                                                    <% } %>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- SEO Section -->
                        <div class="accordion mb-4" id="seoAccordion">
                            <div class="accordion-item border-0 shadow-sm">
                                <h2 class="accordion-header">
                                    <button class="accordion-button bg-light py-2 collapsed" type="button"
                                        data-bs-toggle="collapse" data-bs-target="#seoCollapse">

                                        <span class="fw-medium">SEO Settings</span>
                                    </button>
                                </h2>
                                <div id="seoCollapse" class="accordion-collapse collapse"
                                    data-bs-parent="#seoAccordion">
                                    <div class="accordion-body pt-3">
                                        <div class="row g-3">
                                            <div class="col-md-6">
                                                <div class="mb-3">
                                                    <label class="form-label fw-medium">Meta Title</label>
                                                    <input name="meta_title" class="form-control"
                                                        placeholder="Optimized title (50-60 chars)" />
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="mb-3">
                                                    <label class="form-label fw-medium">Canonical Url</label>
                                                    <input type="url" name="canonical_url" class="form-control"
                                                        placeholder="Canonical URL" />
                                                </div>
                                            </div>
                                            <div class="col-12">
                                                <div class="mb-0">
                                                    <label class="form-label fw-medium">Meta Description</label>
                                                    <textarea name="meta_description" class="form-control" rows="2"
                                                        placeholder="Brief summary (150-160 chars)"></textarea>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Error container -->
                        <div id="formError" class="alert alert-danger d-none mt-3"></div>
                        <!-- Submit Buttons -->
                        <div class="d-flex justify-content-between border-top pt-4">
                            <button type="reset" class="btn btn-outline-secondary">
                                Reset
                            </button>
                            <div>
                                <a href="/admin/theme/theme" class="btn btn-outline-danger me-2">
                                    Cancel
                                </a>
                                <button type="submit" class="btn btn-primary">
                                    Save Theme
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Custom Styling -->
        <style>
            .border-dashed {
                border: 2px dashed #dee2e6;
            }

            .card-header {
                border-bottom: none;
            }

            .form-control:focus,
            .form-select:focus {
                box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.1);
            }
        </style>

        <script>
            function previewImage(event) {
                const preview = document.getElementById('image-preview');
                const placeholder = document.getElementById('image-placeholder');
                const file = event.target.files[0];

                if (file) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        preview.src = e.target.result;
                        preview.classList.remove('d-none');
                        placeholder.classList.add('d-none');
                    }
                    reader.readAsDataURL(file);
                } else {
                    preview.classList.add('d-none');
                    placeholder.classList.remove('d-none');
                }
            }
        </script>

        <!-- <script src="https://cdn.tiny.cloud/1/0uj5zh0otswll1xng9imrwqwy3mf8jzwzxyc3ckzu5m0y5we/tinymce/7/tinymce.min.js"
            referrerpolicy="origin"></script> -->

        <!-- <script>
            tinymce.init({
                selector: '#editor',
                height: 500,
                plugins: 'image link code lists table',
                toolbar: 'undo redo | blocks | bold italic underline | alignleft aligncenter alignright | bullist numlist | image | link | table | code',
                menubar: false,
                setup: function (editor) {
                    // On form submit, set hidden input with editor content
                    // document.querySelector('form').addEventListener('submit', function () {
                    //     document.querySelector('#content').value = editor.getContent();
                    // });

                    // Expose function globally to insert image into editor
                    window.insertToEditor = function (imageUrl) {
                        editor.insertContent(`<img style="max-width: 300px;" src="${imageUrl}" />`);
                    };

                    // Handle custom image upload from the button
                    document.getElementById('gallery-image-button').addEventListener('click', () => {
                        const input = document.createElement('input');
                        input.type = 'file';
                        input.accept = 'image/*';
                        input.click();

                        input.onchange = async () => {
                            const file = input.files[0];
                            const formData = new FormData();
                            formData.append('image', file);

                            try {
                                const res = await fetch('/upload/theme/content', {
                                    method: 'POST',
                                    body: formData,
                                });

                                if (!res.ok) throw new Error('Upload failed');

                                const data = await res.json();
                                const url = data.file;

                                // Insert into editor
                                editor.insertContent(`<img style="max-width: 300px;" src="${url}" />`);

                                // Add to gallery
                                const row = document.querySelector('.gallery-section .row.g-2');
                                const colDiv = document.createElement('div');
                                colDiv.className = 'col-6 col-md-4';

                                const img = document.createElement('img');
                                img.src = url;
                                img.alt = 'Uploaded Image';
                                img.className = 'img-fluid rounded selectable-image';
                                img.style.cssText = 'height: 120px; object-fit: cover; cursor: pointer;';
                                img.setAttribute('onclick', `insertToEditor('${url}')`);

                                colDiv.appendChild(img);
                                row.prepend(colDiv);
                            } catch (err) {
                                console.error('Image upload failed', err);
                            }
                        };
                    });
                }
            });
        </script> -->

        <script>
            document.addEventListener('DOMContentLoaded', () => {
                const btns = [
                    "bold", "italic", "underline", "strikethrough", "eraser", "ul", "ol",
                    "fontsize", "paragraph", "superscript", "subscript", "image", "video", "cut", "copy", "paste", "copyformat",
                    "hr", "table", "link", "left", "center", "right", "indent", "source", "file", "spellcheck", "fullsize",
                    "undo", "redo", "print", "selectall", "code"
                ];

                const editor = Jodit.make('#editor', {
                    height: 500,
                    buttons: btns,
                    toolbarAdaptive: false,
                    defaultActionOnPaste: "insert_clear_html"
                });

                // Add 'img-fluid' class to inserted <img> tags on content change
                editor.events.on('change', function (text) {
                    const parser = new DOMParser();
                    const htmlDoc = parser.parseFromString(text, 'text/html');
                    const imgs = htmlDoc.getElementsByTagName('img');
                    if (imgs) {
                        for (const img of imgs) {
                            if (!img.classList.contains('img-fluid')) {
                                img.classList.add('img-fluid');
                            }
                        }
                    }
                    text = htmlDoc.body.innerHTML;
                });

                // Override insertHTML to sanitize HTML using DOMPurify
                editor.selection.originalInsertHTML = editor.selection.insertHTML;
                editor.selection.insertHTML = html => {
                    var clean = DOMPurify.sanitize(html, {
                        ALLOWED_ATTR: ['src', 'href', 'target', 'class'],
                        ALLOWED_TAGS: [
                            'p', 'strong', 'ul', 'ol', 'li', 'i', 'u', 's', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',
                            'quote', 'pre', 'sup', 'sub', 'img', 'table', 'colgroup', 'col', 'tr', 'td', 'tbody', 'thead',
                            'iframe', 'b', 'a'
                        ]
                    });
                    return editor.selection.originalInsertHTML(clean);
                };

                // Define insertToEditor globally
                window.insertToEditor = function (imageUrl) {
                    editor.selection.insertHTML(`<img class="img-fluid" style="max-width: 300px;" src="${imageUrl}" />`);
                };

                // Upload image manually from 'Add' button
                document.getElementById('gallery-image-button').addEventListener('click', () => {
                    const input = document.createElement('input');
                    input.type = 'file';
                    input.accept = 'image/*';
                    input.click();

                    input.onchange = async () => {
                        const file = input.files[0];
                        const formData = new FormData();
                        formData.append('image', file);

                        try {
                            const res = await fetch('/upload/region/content', {
                                method: 'POST',
                                body: formData,
                            });

                            if (!res.ok) throw new Error('Upload failed');

                            const data = await res.json();
                            const url = data.file;

                            // Insert into editor
                            editor.selection.insertHTML(`<img class="img-fluid" style="max-width: 300px;" src="${url}" />`);

                            // Add to gallery (if gallery row exists)
                            const row = document.querySelector('.gallery-section .row.g-3');
                            if (row) {
                                const colDiv = document.createElement('div');
                                colDiv.className = 'col-12 col-sm-6 col-md-4 col-lg-2 d-flex justify-content-center';

                                const img = document.createElement('img');
                                img.src = url;
                                img.alt = 'Uploaded Image';
                                img.className = 'img-fluid rounded selectable-image border border-secondary';
                                img.style.cssText = 'max-width: 100%; max-height: 120px; height: auto; cursor: pointer; padding: 2px;';
                                img.setAttribute('onclick', `insertToEditor('${url}')`);

                                colDiv.appendChild(img);
                                row.prepend(colDiv);
                            }
                        } catch (err) {
                            console.error('Image upload failed', err);
                        }
                    };
                });
            });
        </script>

        <script>
            document.getElementById('name').addEventListener('input', function () {
                const slug = this.value
                    .toLowerCase()
                    .replace(/[^a-z0-9]+/g, '-')
                    .replace(/(^-|-$)/g, '');
                document.getElementById('slug').value = slug;
            });
        </script>
        <script>
            document.getElementById('themeForm').addEventListener('submit', async function (e) {
                e.preventDefault();

                // Show loading state
                const submitBtn = document.querySelector('#themeForm button[type="submit"]');
                const originalBtnText = submitBtn.innerHTML;
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i> Saving...';
                submitBtn.disabled = true;

                // Clear previous errors
                const errorContainer = document.getElementById('formError');
                errorContainer.classList.add('d-none');
                errorContainer.innerHTML = '';

                try {
                    const formData = new FormData(this);

                    // Get TinyMCE content and add to formData
                    if (typeof tinymce !== 'undefined') {
                        formData.set('content', tinymce.get('editor').getContent());
                    }

                    const response = await fetch(this.action, {
                        method: 'POST',
                        body: formData,
                        // Don't set Content-Type header when using FormData,
                        // the browser will set it automatically with the correct boundary
                    });

                    const result = await response.json();

                    if (!response.ok) {
                        throw new Error(result.message || 'Server error occurred');
                    }

                    if (result.success) {
                        // Success - redirect or show success message
                        window.location.href = '/admin/theme/theme?success=Theme created successfully';
                    } else {
                        // Show validation errors
                        showFormError(result.message || 'Error saving theme');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    showFormError(error.message || 'An unexpected error occurred');
                } finally {
                    // Restore button state
                    submitBtn.innerHTML = originalBtnText;
                    submitBtn.disabled = false;
                }
            });

            function showFormError(message) {
                const errorContainer = document.getElementById('formError');
                errorContainer.innerHTML = `<i class="fas fa-exclamation-circle me-2"></i>${message}`;
                errorContainer.classList.remove('d-none');

                // Scroll to error
                errorContainer.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
            }
        </script>
        <%- include('../layout/footer') %>