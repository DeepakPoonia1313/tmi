<%- include('../layout/header') %>
    <%- include('../layout/sidebar') %>

        <div class="container mt-4">
            <!-- Breadcrumbs -->
            <nav aria-label="breadcrumb" class="mb-4">
                <ol class="breadcrumb bg-light p-3 rounded">
                    <% breadcrumbs.forEach(crumb=> { %>
                        <% if (crumb.url) { %>
                            <li class="breadcrumb-item">
                                <a href="<%= crumb.url %>" class="text-decoration-none">

                                    <%= crumb.label %>
                                </a>
                            </li>
                            <% } else { %>
                                <li class="breadcrumb-item active" aria-current="page">
                                    <%= crumb.label %>
                                </li>
                                <% } %>
                                    <% }) %>
                </ol>
            </nav>

            <div class="card shadow-sm">
                <div class="card-header text-black">
                    <h5 class="mb-0">Add New City</h5>
                </div>
                <div class="card-body">
                    <form action="/admin/city/add?module=city&moduleId=city" method="POST"
                        enctype="multipart/form-data">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="name" class="form-label fw-bold">City Name</label>
                                    <input type="text" class="form-control" id="name" name="name" required
                                        maxlength="100" placeholder="Enter city name">
                                </div>

                                <div class="mb-3">
                                    <label for="slug" class="form-label fw-bold">Slug</label>
                                    <input type="text" class="form-control" id="slug" name="slug" required
                                        maxlength="100" placeholder="Enter Slug ">
                                </div>

                                <div class="mb-3">
                                    <label for="state_id" class="form-label fw-bold">State</label>
                                    <select class="form-select" id="state_id" name="state_id" required>
                                        <option value="" disabled selected>Select state</option>
                                        <% states.forEach(state=> { %>
                                            <option value="<%= state.id %>">
                                                <%= state.name %>
                                            </option>
                                            <% }) %>
                                    </select>
                                </div>

                                <div class="mb-3">
                                    <label for="description" class="form-label fw-bold">Short Description</label>
                                    <textarea class="form-control" id="description" name="description" rows="3" required
                                        placeholder="Brief description about the city"></textarea>
                                </div>
                            </div>

                            <!-- <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="image" class="form-label fw-bold">City Image</label>
                                    <input type="file" class="form-control" id="image" name="image" accept="image/*"
                                        onchange="previewImage(event)" required>
                                    <div class="mt-2 border rounded p-2 text-center" style="min-height: 150px;">
                                        <img id="image-preview" src="#" alt="Image Preview" class="img-fluid"
                                            style="display: none; max-height: 200px;" />
                                        <div id="image-placeholder"
                                            class="text-muted d-flex flex-column align-items-center justify-content-center"
                                            style="height: 150px;">
                                            
                                            <span>Image preview will appear here</span>
                                        </div>
                                    </div>
                                    <small class="text-muted">Recommended size: 800x600px</small>
                                </div>
                            </div> -->
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="image" class="form-label fw-bold">City Image</label>
                                    <input type="file" class="form-control" id="image" name="image" accept="image/*"
                                        onchange="previewImage(event)" required>

                                    <!-- Preview box hidden initially -->
                                    <div id="image-preview-box" class="mt-2 border rounded p-2 text-center d-none"
                                        style="min-height: 150px;">
                                        <img id="image-preview" src="#" alt="Image Preview" class="img-fluid"
                                            style="max-height: 200px;" />
                                    </div>

                                    <small class="text-muted">Recommended size: 800x600px</small>
                                </div>
                            </div>
                        </div>
                        <div class="editor-container mb-3">
                            <div class="row">
                                <div class="col-12">
                                    <div class="mb-3">
                                        <label class="form-label fw-bold">Content</label>
                                        <textarea id="editor" name="content" class="form-control"
                                            style="min-height: 300px;"></textarea>
                                    </div>
                                </div>
                            </div>

                            <div class="row mt-3">
                                <div class="col-12">
                                    <div class="gallery-section">
                                        <div class="d-flex justify-content-between align-items-center mb-3">
                                            <h5 class="mb-0">Gallery</h5>
                                            <button type="button" class="btn btn-primary btn-sm"
                                                id="gallery-image-button">
                                                Add
                                            </button>
                                        </div>

                                        <div style="max-height: 350px; overflow-y: auto; overflow-x: hidden;">
                                            <% if (images && images.length> 0) { %>
                                                <div class="row g-3">
                                                    <% images.reverse().forEach((image, index)=> { %>
                                                        <div class="col-12 col-sm-6 col-md-4 col-lg-3">
                                                            <div class="card h-100 mt-4 shadow-sm">
                                                                <div class="card-img-top d-flex justify-content-center align-items-center p-2"
                                                                    style="height: 150px;">
                                                                    <img src="<%= image %>" alt="Uploaded Image"
                                                                        class="img-fluid rounded cursor-pointer"
                                                                        style="max-height: 100%; width: auto;"
                                                                        onclick="insertToEditor('<%= image %>')" />
                                                                </div>
                                                                <div class="card-body p-2">
                                                                    <div
                                                                        class="d-flex justify-content-between align-items-center">
                                                                        <small class="text-muted text-truncate me-2"
                                                                            style="max-width: 70%;">
                                                                            Image <%= index + 1 %>
                                                                        </small>
                                                                        <button
                                                                            class="btn btn-sm btn-outline-secondary copy-url-btn"
                                                                            data-url="<%= image %>" title="Copy URL">
                                                                            <i class="bi bi-clipboard"></i>
                                                                        </button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <% }) %>
                                                </div>
                                                <% } else { %>
                                                    <div class="text-center py-3">
                                                        <p class="text-muted">No previously uploaded images.</p>
                                                    </div>
                                                    <% } %>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="meta_title" class="form-label fw-bold">Meta Title</label>
                                    <input type="text" class="form-control" id="meta_title" name="meta_title"
                                        maxlength="255" placeholder="SEO meta title">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="meta_description" class="form-label fw-bold">Meta Description</label>
                                    <textarea class="form-control" id="meta_description" name="meta_description"
                                        rows="2" maxlength="255" placeholder="SEO meta description"></textarea>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="canonical_url" class="form-label fw-bold">Canonical Url</label>
                                    <!-- <textarea class="form-control" id="canonical_url" name="canonical_url" rows="2"
                                        maxlength="255" placeholder="SEO Canonical Url (Comma separated)"></textarea> -->
                                    <input type="url" class="form-control" id="canonical_url" name="canonical_url"
                                        maxlength="255" placeholder="SEO Canonical Url">
                                </div>
                            </div>
                        </div>

                        <!-- <div class="row mt-2">
                            <div class="col-md-6">
                                <label for="featuredPackages">Featured Packages</label>
                                <select id="featuredPackages" class="form-control" multiple></select>

                                <div id="selectedPackagesContainer" class="mt-3 d-flex flex-column gap-2"></div>

                                <input type="hidden" name="featured_packages" id="featuredPackagesInput">

                            </div>
                        </div> -->
                        <div class="row mt-2">
                            <div class="col-md-6">
                                <!-- Select2 Multi-select -->
                                <label for="featuredPackages">Featured Packages</label>
                                <select id="featuredPackages" class="form-control" multiple></select>

                                <!-- Container to show selected packages -->
                                <div id="selectedPackagesContainer" class="mt-3">
                                    <div class="selected-packages-list"></div>
                                </div>

                                <!-- Hidden input to store selected data for form submission -->
                                <input type="hidden" name="featured_packages" id="featuredPackagesInput">
                            </div>
                        </div>

                        <div class="d-flex justify-content-end mt-4">
                            <a href="/admin/city/city" class="btn btn-outline-secondary me-2">
                                Cancel
                            </a>
                            <button type="submit" class="btn btn-primary">
                                Add City
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- <script src="https://cdn.tiny.cloud/1/0uj5zh0otswll1xng9imrwqwy3mf8jzwzxyc3ckzu5m0y5we/tinymce/7/tinymce.min.js"
            referrerpolicy="origin"></script> -->

        <!-- package order selection -->
        <!-- <script>
            let selectedPackages = [];

            // Initialize Select2 with AJAX search
            $('#featuredPackages').select2({
                placeholder: 'Search and select packages',
                ajax: {
                    url: '/admin/api/packages',
                    dataType: 'json',
                    delay: 250,
                    data: params => ({ q: params.term }),
                    processResults: data => ({
                        results: data.results
                    }),
                    cache: true
                },
                minimumInputLength: 2,
                width: '100%'
            });

            // Handle selection
            $('#featuredPackages').on('select2:select', function (e) {
                const pkg = e.params.data;

                // Avoid duplicates
                if (!selectedPackages.find(p => p.id === pkg.id)) {
                    selectedPackages.push({ ...pkg, order_number: selectedPackages.length + 1 });
                    renderSelectedPackages();
                }

                // Clear selection from select2 (we manage display manually)
                $(this).val(null).trigger('change');
            });

            // Render selected packages
            function renderSelectedPackages() {
                const container = document.getElementById('selectedPackagesContainer');
                container.innerHTML = '';

                selectedPackages.forEach((pkg, index) => {
                    const div = document.createElement('div');
                    div.className = 'd-flex align-items-center justify-content-between p-2 border rounded bg-light';

                    div.innerHTML = `
        <div>
          <strong>${pkg.text}</strong> (Order: ${index + 1})
          <br>
          <img src="${pkg.img}" alt="${pkg.text}" style="max-width: 50px; max-height: 50px; object-fit: cover;" class="img-thumbnail mt-1">
        </div>
        <div>
          <button class="btn btn-sm btn-outline-secondary me-2" onclick="movePackage(${index}, -1)">↑</button>
          <button class="btn btn-sm btn-outline-secondary me-2" onclick="movePackage(${index}, 1)">↓</button>
          <button class="btn btn-sm btn-danger" onclick="removePackage(${index})">Remove</button>
        </div>
      `;

                    container.appendChild(div);
                });

                // Update hidden input
                document.getElementById('featuredPackagesInput').value = JSON.stringify(
                    selectedPackages.map((pkg, index) => ({
                        package_id: pkg.id,
                        order_number: index + 1
                    }))
                );
            }

            function removePackage(index) {
                selectedPackages.splice(index, 1);
                renderSelectedPackages();
            }

            function movePackage(index, direction) {
                const newIndex = index + direction;
                if (newIndex < 0 || newIndex >= selectedPackages.length) return;

                const temp = selectedPackages[index];
                selectedPackages[index] = selectedPackages[newIndex];
                selectedPackages[newIndex] = temp;

                renderSelectedPackages();
            }
        </script> -->

        <style>
            .selected-packages-list {
                display: flex;
                flex-direction: column;
                gap: 12px;
            }

            .package-card {
                display: flex;
                align-items: center;
                padding: 12px;
                border-radius: 8px;
                background: #f8f9fa;
                border: 1px solid #dee2e6;
                transition: all 0.2s;
            }

            .package-card:hover {
                background: #e9ecef;
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
            }

            .package-image {
                width: 60px;
                height: 60px;
                object-fit: cover;
                border-radius: 4px;
                margin-right: 15px;
            }

            .package-info {
                flex: 1;
            }

            .package-title {
                font-weight: 600;
                margin-bottom: 4px;
            }

            .package-meta {
                font-size: 0.85rem;
                color: #6c757d;
            }

            .package-actions {
                display: flex;
                gap: 8px;
            }

            .order-badge {
                background: #0d6efd;
                color: white;
                padding: 3px 8px;
                border-radius: 10px;
                font-size: 0.75rem;
                font-weight: 600;
            }
        </style>

        <script>
            let selectedPackages = [];

            // Initialize Select2 with AJAX search
            $('#featuredPackages').select2({
                placeholder: 'Search and select packages',
                ajax: {
                    url: '/admin/api/packages',
                    dataType: 'json',
                    delay: 250,
                    data: params => ({ q: params.term }),
                    processResults: data => ({
                        results: data.results
                    }),
                    cache: true
                },
                minimumInputLength: 2,
                width: '100%'
            });

            // Handle selection
            $('#featuredPackages').on('select2:select', function (e) {
                const pkg = e.params.data;

                // Avoid duplicates
                if (!selectedPackages.find(p => p.id === pkg.id)) {
                    selectedPackages.push({ ...pkg, order_number: selectedPackages.length + 1 });
                    renderSelectedPackages();
                }

                // Clear selection from select2 (we manage display manually)
                $(this).val(null).trigger('change');
            });

            // Render selected packages
            function renderSelectedPackages() {
                const container = document.querySelector('.selected-packages-list');
                container.innerHTML = '';

                selectedPackages.forEach((pkg, index) => {
                    const card = document.createElement('div');
                    card.className = 'package-card';

                    card.innerHTML = `
                <img src="${pkg.img}" alt="${pkg.text}" class="package-image">
                <div class="package-info">
                    <div class="package-title">${pkg.text}</div>
                    <div class="package-meta">
                        <span class="order-badge">Order #${index + 1}</span>
                        ${pkg.price ? `<span class="ms-2">Price: $${pkg.price}</span>` : ''}
                    </div>
                </div>
                <div class="package-actions">
                    <button class="btn btn-sm btn-outline-primary" onclick="movePackage(${index}, -1)" ${index === 0 ? 'disabled' : ''}>
                        <i class="fas fa-arrow-up"></i>
                    </button>
                    <button class="btn btn-sm btn-outline-primary" onclick="movePackage(${index}, 1)" ${index === selectedPackages.length - 1 ? 'disabled' : ''}>
                        <i class="fas fa-arrow-down"></i>
                    </button>
                    <button class="btn btn-sm btn-outline-danger" onclick="removePackage(${index})">
                        Remove
                    </button>
                </div>
            `;

                    container.appendChild(card);
                });

                // Update hidden input
                document.getElementById('featuredPackagesInput').value = JSON.stringify(
                    selectedPackages.map((pkg, index) => ({
                        package_id: pkg.id,
                        order_number: index + 1
                    }))
                );
            }

            function removePackage(index) {
                selectedPackages.splice(index, 1);
                renderSelectedPackages();
            }

            function movePackage(index, direction) {
                const newIndex = index + direction;
                if (newIndex < 0 || newIndex >= selectedPackages.length) return;

                const temp = selectedPackages[index];
                selectedPackages[index] = selectedPackages[newIndex];
                selectedPackages[newIndex] = temp;

                renderSelectedPackages();
            }
        </script>

        <!-- Tiny mce -->
        <!-- <script>
            tinymce.init({
                selector: '#editor',
                height: 500,
                plugins: 'image link code lists table',
                toolbar: 'undo redo | blocks | bold italic underline | alignleft aligncenter alignright | bullist numlist | image | link | table | code',
                menubar: false,
                setup: function (editor) {
                    // On form submit, set hidden input with editor content
                    // document.querySelector('form').addEventListener('submit', function () {
                    //     document.querySelector('#content').value = editor.getContent();
                    // });

                    // Expose function globally to insert image into editor
                    window.insertToEditor = function (imageUrl) {
                        editor.insertContent(`<img style="max-width: 300px;" src="${imageUrl}" />`);
                    };

                    // Handle custom image upload from the button
                    document.getElementById('gallery-image-button').addEventListener('click', () => {
                        const input = document.createElement('input');
                        input.type = 'file';
                        input.accept = 'image/*';
                        input.click();

                        input.onchange = async () => {
                            const file = input.files[0];
                            const formData = new FormData();
                            formData.append('image', file);

                            try {
                                const res = await fetch('/upload/city/content', {
                                    method: 'POST',
                                    body: formData,
                                });

                                if (!res.ok) throw new Error('Upload failed');

                                const data = await res.json();
                                const url = data.file;

                                // Insert into editor
                                editor.insertContent(`<img style="max-width: 300px;" src="${url}" />`);

                                // Add to gallery
                                const row = document.querySelector('.gallery-section .row.g-2');
                                const colDiv = document.createElement('div');
                                colDiv.className = 'col-6 col-md-4';

                                const img = document.createElement('img');
                                img.src = url;
                                img.alt = 'Uploaded Image';
                                img.className = 'img-fluid rounded selectable-image';
                                img.style.cssText = 'height: 120px; object-fit: cover; cursor: pointer;';
                                img.setAttribute('onclick', `insertToEditor('${url}')`);

                                colDiv.appendChild(img);
                                row.prepend(colDiv);
                            } catch (err) {
                                console.error('Image upload failed', err);
                            }
                        };
                    });
                }
            });
        </script> -->


        <script>
            document.addEventListener('DOMContentLoaded', () => {
                const btns = [
                    "bold", "italic", "underline", "strikethrough", "eraser", "ul", "ol",
                    "fontsize", "paragraph", "superscript", "subscript", "image", "video", "cut", "copy", "paste", "copyformat",
                    "hr", "table", "link", "left", "center", "right", "indent", "source", "file", "spellcheck", "fullsize",
                    "undo", "redo", "print", "selectall", "code"
                ];

                const editor = Jodit.make('#editor', {
                    height: 500,
                    buttons: btns,
                    toolbarAdaptive: false,
                    defaultActionOnPaste: "insert_clear_html"
                });

                // Add 'img-fluid' class to inserted <img> tags on content change
                editor.events.on('change', function (text) {
                    const parser = new DOMParser();
                    const htmlDoc = parser.parseFromString(text, 'text/html');
                    const imgs = htmlDoc.getElementsByTagName('img');
                    if (imgs) {
                        for (const img of imgs) {
                            if (!img.classList.contains('img-fluid')) {
                                img.classList.add('img-fluid');
                            }
                        }
                    }
                    text = htmlDoc.body.innerHTML;
                });

                // Override insertHTML to sanitize HTML using DOMPurify
                editor.selection.originalInsertHTML = editor.selection.insertHTML;
                editor.selection.insertHTML = html => {
                    var clean = DOMPurify.sanitize(html, {
                        ALLOWED_ATTR: ['src', 'href', 'target', 'class'],
                        ALLOWED_TAGS: [
                            'p', 'strong', 'ul', 'ol', 'li', 'i', 'u', 's', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',
                            'quote', 'pre', 'sup', 'sub', 'img', 'table', 'colgroup', 'col', 'tr', 'td', 'tbody', 'thead',
                            'iframe', 'b', 'a'
                        ]
                    });
                    return editor.selection.originalInsertHTML(clean);
                };

                // Define insertToEditor globally
                window.insertToEditor = function (imageUrl) {
                    editor.selection.insertHTML(`<img class="img-fluid" style="max-width: 300px;" src="${imageUrl}" />`);
                };

                // Upload image manually from 'Add' button
                document.getElementById('gallery-image-button').addEventListener('click', () => {
                    const input = document.createElement('input');
                    input.type = 'file';
                    input.accept = 'image/*';
                    input.click();

                    input.onchange = async () => {
                        const file = input.files[0];
                        const formData = new FormData();
                        formData.append('image', file);

                        try {
                            const res = await fetch('/upload/region/content', {
                                method: 'POST',
                                body: formData,
                            });

                            if (!res.ok) throw new Error('Upload failed');

                            const data = await res.json();
                            const url = data.file;

                            // Insert into editor
                            editor.selection.insertHTML(`<img class="img-fluid" style="max-width: 300px;" src="${url}" />`);

                            // Add to gallery (if gallery row exists)
                            const row = document.querySelector('.gallery-section .row.g-3');
                            if (row) {
                                const colDiv = document.createElement('div');
                                colDiv.className = 'col-12 col-sm-6 col-md-4 col-lg-2 d-flex justify-content-center';

                                const img = document.createElement('img');
                                img.src = url;
                                img.alt = 'Uploaded Image';
                                img.className = 'img-fluid rounded selectable-image border border-secondary';
                                img.style.cssText = 'max-width: 100%; max-height: 120px; height: auto; cursor: pointer; padding: 2px;';
                                img.setAttribute('onclick', `insertToEditor('${url}')`);

                                colDiv.appendChild(img);
                                row.prepend(colDiv);
                            }
                        } catch (err) {
                            console.error('Image upload failed', err);
                        }
                    };
                });
            });
        </script>

        <!-- preview image -->
        <script>
            function previewImage(event) {
                const preview = document.getElementById('image-preview');
                const previewBox = document.getElementById('image-preview-box');
                const file = event.target.files[0];

                if (file) {
                    preview.src = URL.createObjectURL(file);
                    previewBox.classList.remove('d-none'); // Show the preview box
                } else {
                    previewBox.classList.add('d-none'); // Hide if no file selected
                    preview.src = "#";
                }
            }
        </script>

        <!-- auto slug generate -->
        <script>
            document.getElementById('name').addEventListener('input', function () {
                const slug = this.value
                    .toLowerCase()
                    .replace(/[^a-z0-9]+/g, '-')
                    .replace(/(^-|-$)/g, '');
                document.getElementById('slug').value = slug;
            });
        </script>
        <%- include('../layout/footer') %>